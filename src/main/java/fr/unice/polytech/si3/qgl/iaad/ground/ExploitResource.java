package fr.unice.polytech.si3.qgl.iaad.ground;

import fr.unice.polytech.si3.qgl.iaad.Direction;
import fr.unice.polytech.si3.qgl.iaad.Exception.InvalidMapException;
import fr.unice.polytech.si3.qgl.iaad.Resource;
import fr.unice.polytech.si3.qgl.iaad.actions.Action;
import fr.unice.polytech.si3.qgl.iaad.actions.Exploit;
import fr.unice.polytech.si3.qgl.iaad.actions.Ground;
import fr.unice.polytech.si3.qgl.iaad.actions.Scout;
import fr.unice.polytech.si3.qgl.iaad.islandMap.Element;
import fr.unice.polytech.si3.qgl.iaad.islandMap.IslandMap;

import java.util.HashMap;

/**
 * @author Gaetan Vialon
 *         Created the 05/01/2017.
 */
public class ExploitResource implements ProtocolGround{
    /**
     * La carte utilisée
     */
    private IslandMap map;
    /**
     * L'orientation du drone
     */
    private Direction heading;
    /**
     * Le sous-protocole en cours d'utilisation
     */
    private ProtocolGround protocol;
    /**
     * Conservation du sens de parcours de la carte pour l'exploration de l'île
     */
    private Resource resource;

    private int nbofResource;

    private HashMap<Resource,Integer> contrat;


    ExploitResource(Resource resource, int nbofResource)
    {
        this.resource = resource;
        this.nbofResource = nbofResource;
    }

    @Override
    public Action nextAction() throws InvalidMapException
    {
        return new Exploit(resource);
    }

    @Override
    public ProtocolGround setResult(Ground result) throws InvalidMapException
    {
        nbofResource -= result.getAmountExploit();
        if(nbofResource <= 0 || result.getAmountExploit()==0 ) return new InitialisationGround();
        else return this;
    }
}
