package fr.unice.polytech.si3.qgl.iaad.strategy.advanced.terrestrial;

import fr.unice.polytech.si3.qgl.iaad.engine.format.Context;
import fr.unice.polytech.si3.qgl.iaad.engine.player.actions.Decision;
import fr.unice.polytech.si3.qgl.iaad.engine.player.actions.Exploit;
import fr.unice.polytech.si3.qgl.iaad.engine.player.results.ExploitResult;
import fr.unice.polytech.si3.qgl.iaad.engine.player.results.Result;
import fr.unice.polytech.si3.qgl.iaad.strategy.Protocol;
import fr.unice.polytech.si3.qgl.iaad.util.map.IslandMap;
import fr.unice.polytech.si3.qgl.iaad.util.resource.Resource;
import fr.unice.polytech.si3.qgl.iaad.util.workforce.Crew;

/**
 * @author Alexandre Clement
 * @since 19/03/2017.
 */
public class ExploitTile implements Protocol
{
    private final Context context;
    private final IslandMap map;
    private final Crew crew;
    private final Resource resource;

    ExploitTile(Context context, IslandMap map, Crew crew, Resource resource)
    {
        this.context = context;
        this.map = map;
        this.crew = crew;
        this.resource = resource;
    }

    @Override
    public Decision takeDecision()
    {
        return new Exploit(resource);
    }

    @Override
    public Protocol acknowledgeResults(Result result)
    {
        ExploitResult exploitResult = new ExploitResult(result);
        context.getContract().collect(resource, exploitResult.getExploitAmount());
        return new ScheduleCrewPath(context, map, crew);
    }
}
